{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"citing/","text":"Citing NUCLEAR NUCLEAR methodologies were published in the Nucleic Acid Research journal . If any of them were helpful in your work, give us feedback by citing this: Gonz\u00e1lez-Alem\u00e1n, R., Chevrollier, N., Simoes, M., Montero-Cabrera, L., & Leclerc, F. (2021). MCSS-Based Predictions of Binding Mode and Selectivity of Nucleotide Ligands. Journal of Chemical Theory and Computation, 17(4), 2599\u20132618.","title":"Citing"},{"location":"citing/#citing-nuclear","text":"NUCLEAR methodologies were published in the Nucleic Acid Research journal . If any of them were helpful in your work, give us feedback by citing this: Gonz\u00e1lez-Alem\u00e1n, R., Chevrollier, N., Simoes, M., Montero-Cabrera, L., & Leclerc, F. (2021). MCSS-Based Predictions of Binding Mode and Selectivity of Nucleotide Ligands. Journal of Chemical Theory and Computation, 17(4), 2599\u20132618.","title":"Citing NUCLEAR"},{"location":"installation/","text":"Setting up the NUCLEAR environment You can set up NUCLEAR in your local device by defining a conda 1 environment. Please ensure you have anaconda/miniconda3 installed in your $HOME and then: Clone the nuclear repo: $ git clone https://github.com/rglez/nuclear.git Change the last line of the environment.yml file to suit your local system Create and activate the nuclear environment: $ cd nuclear $ conda env create $ conda activate nuclear Conda is an open-source package management system and environment management system that quickly installs, runs, and updates packages and their dependencies. \u21a9","title":"Setting up"},{"location":"installation/#setting-up-the-nuclear-environment","text":"You can set up NUCLEAR in your local device by defining a conda 1 environment. Please ensure you have anaconda/miniconda3 installed in your $HOME and then: Clone the nuclear repo: $ git clone https://github.com/rglez/nuclear.git Change the last line of the environment.yml file to suit your local system Create and activate the nuclear environment: $ cd nuclear $ conda env create $ conda activate nuclear Conda is an open-source package management system and environment management system that quickly installs, runs, and updates packages and their dependencies. \u21a9","title":"Setting up the NUCLEAR environment"},{"location":"parameters/","text":"NUCLEAR configuration file parameters NUCLEAR uses a configuration file to specify all their required parameters. Users must decide what job to perform; (i) a molecular hotspot determination or (ii) an oligonucleotide search. For a hotspot determination, the sections [inputs] , [mcss_files] , and [spots_params] are the only ones that should appear in the configuration file. If an oligonucleotide search is requested, then the mandatory sections are [inputs] , [mcss_files] , [zones_params] , [search_params] , and [minimization] . Below, all section parameters have been described. Section [inputs] input_dir < path to the directory containing MCSS explorations > Acceptable Values: valid path. Recommended Value: None Description: Specifies the path to find the .crd files of MCSS docking results. NUCLEAR will check if this path exists. output_dir < path to the output directory > Acceptable Values: valid path. Recommended Value: None Description: Specifies the root path where NUCLEAR writes results. NUCLEAR will check if this path exists, in which case the program will stop to avoid overwriting previous results. prot_coords < path to the receptor.pdb > Acceptable Values: valid path Recommended Value: None Description: Specifies the path to the receptor .pdb coordinate file. NUCLEAR will check if this path exists and that the receptor file format is .pdb . ncores < number of cores for parallelization > Acceptable Values: integer >= 1 Recommended Value: 1 Description: Specifies the number of cores used to construct the matrix of clashes. Section [mcss_files] [mcss_files] is a mandatory section that contains no parameter. Instead, users must specify one or more tuples of three blank-separated columns. Note that one of the two last columns (or both) must be N (unrestricted) to avoid selection ambiguities. 1st column (string): The name of the .crd file (including the extension but not the path, already specified in the input_dir parameter). 2nd column (float): Maximum score to be considered in the corresponding MCSS distribution. Poses having a higher score will not be considered. 3rd column (integer): Number of poses to be considered in the corresponding MCSS distribution. Section [spots_params] prot_sel < NUCLEAR protein selection > Acceptable Values: [ all | heavy | protein ] Recommended Value: protein Description: Selection of protein atoms considered when calculating protein-ligand contact zone. Options are limited to all: all atoms in the protein.pdb file, heavy: non-hydrogen atoms in the protein.pdb file, and protein: protein atoms in the protein.pdb file. frag_sel < NUCLEAR fragment (ligand) selection > Acceptable Values: [ all | all_nopatch | heavy | heavy_nopatch ] Recommended Value: all_nopatch Description: Selection of ligand atoms considered when calculating protein-ligand contact zone. Options are limited to all: all atoms in the ligand.crd file, all_nopatch: all atoms except patch ones in the ligand.crd file, heavy: non-hydrogen atoms in the ligand.crd file, and heavy_nopatch: non-hydrogen atoms except patch ones in the ligand.crd file. Patch atoms (not used when constructing oligonucleotides) are defined as: ['C5T', 'O5T', 'O1P', 'O2P', 'H5T1', 'H5T2', 'H5T3'] inter_dist < Inter-atomic distance for contact zones calculation > Acceptable Values: float > 0.0 Recommended Value: 3.5 Description: Inter-atomic distance under which a contact between a ligand atom and a protein atom is declared density_cut < In hotspots detection, clusters having a density value under this cutoff get filtered out > Acceptable Values: 0.0 < float < 1.0 Recommended Value: 0.05 Description: Clusters having a density value under this cutoff get filtered out. The density of a cluster is calculated as the Number of poses it contains divided by the Number of distinct residues involved in the poses' contact zones. This magnitude is then normalized to the 0-1 interval. merge_cut < In hotspot detection, cluster seeds having a similarity value under this cutoff provokes their clusters to merge > Acceptable Values: 0.0 < float < 1.0 Recommended Value: 0.25 Description: In hotspot detection, cluster seeds having a similarity value under this cutoff provokes their clusters to merge. The similarity metric employed is the Tanimoto index (lowest values correspond to more similar seeds). Section [zones_params] prot_sel < idem to what is described in section [spots_params] > frag_sel < idem to what is described in section [spots_params] > inter_dist < idem to what is described in section [spots_params] > Section [search_params] top_N < Number of top-N best-scored sequences to be returned > Acceptable Values: integer >= 1 Recommended Value: 500 Description: Number of top-N best-scored sequences to be returned. The sequence score is calculated as the summation of the scores of each composing nucleotide. seq_min_size < Minimum number of nucleotides in returned sequences > Acceptable Values: integer >= 2 Recommended Value: 2 Description: Minimum number of nucleotides in returned sequences. When seq_to_search is not all, this value must equal the number of nucleotides specified in the seq_to_search parameter. seq_max_size < Maximum number of nucleotides in returned sequences > Acceptable Values: integer >= seq_min_size Recommended Value: N Description: Maximum number of nucleotides in returned sequences. Users can retrieve the maximum number of nucleotides in returned sequences by setting this to N. When seq_to_search is not all, this value must equal the number of nucleotides specified in the seq_to_search parameter. seq_to_search < Sequence of nucleotides to search > Acceptable Values: [ all | :-separated string of resnames ] Recommended Value: all Description: Sequence of nucleotides to search. The oligonucleotide sequence must comprise colon-separated strings corresponding to each nucleotide resname, as found in the corresponding crd files. The underscore _ can specify any nucleotide. When seq_to_search is not all, parameters seq_max_size must equal seq_min_size, and both must be set to the Number of nucleotides specified in seq_to_search. path_to_search < Atomic selection of protein residues to search > Acceptable Values: valid string selection (defined in agreement with ProDy syntax) Recommended Value: [all | valid string selection ] Description: Atomic selection of protein residues. Only contact zones containing these residues indices will be considered. max_dist_O3C5 < The maximum distance between O3' and C5' atoms may link consecutive nucleotides. > Acceptable Values: float > 0.0 Recommended Value: 4.0 A Description: The maximum distance between O3' and C5' atoms may link consecutive nucleotides. clash_dist < Minimum distance to declare an atomic clash > Acceptable Values: 0.0 < float < max_dist_O3C5 Recommended Value: 2.0 A Description: Minimum distance to declare an atomic clash. When atoms of different nucleotides inside an under-construction sequence are closer than this distance, a clash is declared, and the nucleotide provoking the clash is removed from the sequence. Section [minimization] We will complete this section soon. self.prot_topol = self.cfg['minimization']['prot_topol'] self.prot_param = self.cfg['minimization']['prot_param'] self.na_topol = self.cfg['minimization']['na_topol'] self.na_param = self.cfg['minimization']['na_param'] self.carb_topol = self.cfg['minimization']['carb_topol'] self.carb_param = self.cfg['minimization']['carb_param'] self.cgenff_topol = self.cfg['minimization']['cgenff_topol'] self.cgenff_param = self.cfg['minimization']['cgenff_param'] self.namod_toppar = self.cfg['minimization']['namod_toppar'] self.narna_toppar = self.cfg['minimization']['narna_toppar'] self.watio_toppar = self.cfg['minimization']['watio_toppar'] self.modreac_toppar = self.cfg['minimization']['modreac_toppar']","title":"Parameters"},{"location":"parameters/#nuclear-configuration-file-parameters","text":"NUCLEAR uses a configuration file to specify all their required parameters. Users must decide what job to perform; (i) a molecular hotspot determination or (ii) an oligonucleotide search. For a hotspot determination, the sections [inputs] , [mcss_files] , and [spots_params] are the only ones that should appear in the configuration file. If an oligonucleotide search is requested, then the mandatory sections are [inputs] , [mcss_files] , [zones_params] , [search_params] , and [minimization] . Below, all section parameters have been described.","title":"NUCLEAR configuration file parameters"},{"location":"parameters/#section-inputs","text":"input_dir < path to the directory containing MCSS explorations > Acceptable Values: valid path. Recommended Value: None Description: Specifies the path to find the .crd files of MCSS docking results. NUCLEAR will check if this path exists. output_dir < path to the output directory > Acceptable Values: valid path. Recommended Value: None Description: Specifies the root path where NUCLEAR writes results. NUCLEAR will check if this path exists, in which case the program will stop to avoid overwriting previous results. prot_coords < path to the receptor.pdb > Acceptable Values: valid path Recommended Value: None Description: Specifies the path to the receptor .pdb coordinate file. NUCLEAR will check if this path exists and that the receptor file format is .pdb . ncores < number of cores for parallelization > Acceptable Values: integer >= 1 Recommended Value: 1 Description: Specifies the number of cores used to construct the matrix of clashes.","title":"Section [inputs]"},{"location":"parameters/#section-mcss_files","text":"[mcss_files] is a mandatory section that contains no parameter. Instead, users must specify one or more tuples of three blank-separated columns. Note that one of the two last columns (or both) must be N (unrestricted) to avoid selection ambiguities. 1st column (string): The name of the .crd file (including the extension but not the path, already specified in the input_dir parameter). 2nd column (float): Maximum score to be considered in the corresponding MCSS distribution. Poses having a higher score will not be considered. 3rd column (integer): Number of poses to be considered in the corresponding MCSS distribution.","title":"Section [mcss_files]"},{"location":"parameters/#section-spots_params","text":"prot_sel < NUCLEAR protein selection > Acceptable Values: [ all | heavy | protein ] Recommended Value: protein Description: Selection of protein atoms considered when calculating protein-ligand contact zone. Options are limited to all: all atoms in the protein.pdb file, heavy: non-hydrogen atoms in the protein.pdb file, and protein: protein atoms in the protein.pdb file. frag_sel < NUCLEAR fragment (ligand) selection > Acceptable Values: [ all | all_nopatch | heavy | heavy_nopatch ] Recommended Value: all_nopatch Description: Selection of ligand atoms considered when calculating protein-ligand contact zone. Options are limited to all: all atoms in the ligand.crd file, all_nopatch: all atoms except patch ones in the ligand.crd file, heavy: non-hydrogen atoms in the ligand.crd file, and heavy_nopatch: non-hydrogen atoms except patch ones in the ligand.crd file. Patch atoms (not used when constructing oligonucleotides) are defined as: ['C5T', 'O5T', 'O1P', 'O2P', 'H5T1', 'H5T2', 'H5T3'] inter_dist < Inter-atomic distance for contact zones calculation > Acceptable Values: float > 0.0 Recommended Value: 3.5 Description: Inter-atomic distance under which a contact between a ligand atom and a protein atom is declared density_cut < In hotspots detection, clusters having a density value under this cutoff get filtered out > Acceptable Values: 0.0 < float < 1.0 Recommended Value: 0.05 Description: Clusters having a density value under this cutoff get filtered out. The density of a cluster is calculated as the Number of poses it contains divided by the Number of distinct residues involved in the poses' contact zones. This magnitude is then normalized to the 0-1 interval. merge_cut < In hotspot detection, cluster seeds having a similarity value under this cutoff provokes their clusters to merge > Acceptable Values: 0.0 < float < 1.0 Recommended Value: 0.25 Description: In hotspot detection, cluster seeds having a similarity value under this cutoff provokes their clusters to merge. The similarity metric employed is the Tanimoto index (lowest values correspond to more similar seeds).","title":"Section [spots_params]"},{"location":"parameters/#section-zones_params","text":"prot_sel < idem to what is described in section [spots_params] > frag_sel < idem to what is described in section [spots_params] > inter_dist < idem to what is described in section [spots_params] >","title":"Section [zones_params]"},{"location":"parameters/#section-search_params","text":"top_N < Number of top-N best-scored sequences to be returned > Acceptable Values: integer >= 1 Recommended Value: 500 Description: Number of top-N best-scored sequences to be returned. The sequence score is calculated as the summation of the scores of each composing nucleotide. seq_min_size < Minimum number of nucleotides in returned sequences > Acceptable Values: integer >= 2 Recommended Value: 2 Description: Minimum number of nucleotides in returned sequences. When seq_to_search is not all, this value must equal the number of nucleotides specified in the seq_to_search parameter. seq_max_size < Maximum number of nucleotides in returned sequences > Acceptable Values: integer >= seq_min_size Recommended Value: N Description: Maximum number of nucleotides in returned sequences. Users can retrieve the maximum number of nucleotides in returned sequences by setting this to N. When seq_to_search is not all, this value must equal the number of nucleotides specified in the seq_to_search parameter. seq_to_search < Sequence of nucleotides to search > Acceptable Values: [ all | :-separated string of resnames ] Recommended Value: all Description: Sequence of nucleotides to search. The oligonucleotide sequence must comprise colon-separated strings corresponding to each nucleotide resname, as found in the corresponding crd files. The underscore _ can specify any nucleotide. When seq_to_search is not all, parameters seq_max_size must equal seq_min_size, and both must be set to the Number of nucleotides specified in seq_to_search. path_to_search < Atomic selection of protein residues to search > Acceptable Values: valid string selection (defined in agreement with ProDy syntax) Recommended Value: [all | valid string selection ] Description: Atomic selection of protein residues. Only contact zones containing these residues indices will be considered. max_dist_O3C5 < The maximum distance between O3' and C5' atoms may link consecutive nucleotides. > Acceptable Values: float > 0.0 Recommended Value: 4.0 A Description: The maximum distance between O3' and C5' atoms may link consecutive nucleotides. clash_dist < Minimum distance to declare an atomic clash > Acceptable Values: 0.0 < float < max_dist_O3C5 Recommended Value: 2.0 A Description: Minimum distance to declare an atomic clash. When atoms of different nucleotides inside an under-construction sequence are closer than this distance, a clash is declared, and the nucleotide provoking the clash is removed from the sequence.","title":"Section [search_params]"},{"location":"parameters/#section-minimization","text":"We will complete this section soon. self.prot_topol = self.cfg['minimization']['prot_topol'] self.prot_param = self.cfg['minimization']['prot_param'] self.na_topol = self.cfg['minimization']['na_topol'] self.na_param = self.cfg['minimization']['na_param'] self.carb_topol = self.cfg['minimization']['carb_topol'] self.carb_param = self.cfg['minimization']['carb_param'] self.cgenff_topol = self.cfg['minimization']['cgenff_topol'] self.cgenff_param = self.cfg['minimization']['cgenff_param'] self.namod_toppar = self.cfg['minimization']['namod_toppar'] self.narna_toppar = self.cfg['minimization']['narna_toppar'] self.watio_toppar = self.cfg['minimization']['watio_toppar'] self.modreac_toppar = self.cfg['minimization']['modreac_toppar']","title":"Section [minimization]"}]}